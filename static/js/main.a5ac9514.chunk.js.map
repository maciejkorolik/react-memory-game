{"version":3,"sources":["icons/01.png","icons/02.png","icons/03.png","icons/04.png","icons/05.png","icons/06.png","assets/Welcome.png","assets/Finish.png","icons/07.png","icons/08.png","icons/09.png","context/index.js","theme/GlobalStyle.js","theme/theme.js","components/Input.js","components/Button.js","components/LevelSelector.js","views/Welcome.js","components/Heading.js","views/Finish.js","components/Card.js","components/Board.js","icons/icons.js","views/Game.js","views/Root.js","App.js","index.js"],"names":["module","exports","reducer","state","action","type","gameState","payload","user","level","score","initialState","GameContext","React","createContext","GameProvider","children","useReducer","dispatch","Provider","value","GlobalStyle","createGlobalStyle","theme","white","color1","color2","color3","darkgray","lightgray","fontSize","xxs","xs","s","m","l","xl","xxl","Input","styled","input","Button","button","LevelSelector","useContext","LevelWrapper","onClick","Indicator","Level","div","Welcome","useState","setUser","Wrapper","Container","InnerWrapper","Heading","placeholder","maxlength","onChange","e","target","length","alert","test","Image","src","welcomeImage","alt","h1","img","h2","small","css","mobileHidden","Finish","FinishImage","Card","icon","id","flippedCards","hiddenCards","handleClick","clickable","includes","CardWrapper","CardSide","front","flipped","back","won","Board","icons1","icon01","icon02","icon03","icon04","icon05","icon06","icon07","icon08","icon09","icons2","hard","reduce","res","current","concat","easy","easyIcons","shuffle","hardIcons","Game","setFlippedCards","flippedIcons","setFlippedIcons","setWon","moves","setMoves","shuffledIcons","newFlippedCards","newFlippedIcons","checkCards","icons","newWon","setTimeout","TopBar","map","index","key","header","Root","console","log","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5ac9514.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/01.58fe533c.png\";","module.exports = __webpack_public_path__ + \"static/media/02.e50aa4b4.png\";","module.exports = __webpack_public_path__ + \"static/media/03.25dc39b2.png\";","module.exports = __webpack_public_path__ + \"static/media/04.250257ee.png\";","module.exports = __webpack_public_path__ + \"static/media/05.e6d21f86.png\";","module.exports = __webpack_public_path__ + \"static/media/06.a647bf6d.png\";","module.exports = __webpack_public_path__ + \"static/media/Welcome.3b0759d4.png\";","module.exports = __webpack_public_path__ + \"static/media/Finish.804e827a.png\";","module.exports = __webpack_public_path__ + \"static/media/07.65fe91d4.png\";","module.exports = __webpack_public_path__ + \"static/media/08.61528c3b.png\";","module.exports = __webpack_public_path__ + \"static/media/09.00cdf2cf.png\";","import React, { useReducer } from \"react\";\r\n\r\nlet reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SET_GAME_STATE\":\r\n      return { ...state, gameState: action.payload };\r\n    case \"SET_USER\":\r\n      return { ...state, user: action.payload };\r\n    case \"SET_LEVEL\":\r\n      return { ...state, level: action.payload };\r\n    case \"SET_SCORE\":\r\n      return { ...state, score: action.payload };\r\n    case \"CLEAR_STATE\":\r\n      return initialState;\r\n    default:\r\n      return;\r\n  }\r\n};\r\nconst initialState = {\r\n  gameState: \"welcome\",\r\n  user: \"\",\r\n  level: \"easy\",\r\n  score: 0\r\n};\r\nconst GameContext = React.createContext(initialState);\r\nconst GameProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  return (\r\n    <GameContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </GameContext.Provider>\r\n  );\r\n};\r\nexport { GameContext, GameProvider };\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport \"typeface-mclaren\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n  *, *::before, *::after {\r\n    box-sizing: border-box;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    -moz-box-sizing: border-box;\r\n    -webkit-box-sizing: border-box;\r\n  }\r\n\r\n  html {\r\n    font-size: 62.5%;\r\n  }\r\n\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-size: 1.6rem;\r\n    font-family: \"McLaren\", sans-serif;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","export const theme = {\r\n  white: \"#FFFFFF\",\r\n  color1: \"#2568EF\",\r\n  color2: \"#FF564F\",\r\n  color3: \"#FF9B19\",\r\n  darkgray: \"#324A58\",\r\n  lightgray: \"#aaa\",\r\n  fontSize: {\r\n    xxs: \"1.2rem\",\r\n    xs: \"1.8rem\",\r\n    s: \"2.5rem\",\r\n    m: \"2.8rem\",\r\n    l: \"3.5rem\",\r\n    xl: \"5rem\",\r\n    xxl: \"6rem\"\r\n  }\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst Input = styled.input`\r\n  width: 250px;\r\n  margin: 0;\r\n  height: 50px;\r\n  border: none;\r\n  background-color: transparent;\r\n  font-family: \"McLaren\", sans-serif;\r\n  line-height: 1.5;\r\n  font-size: 2.5rem;\r\n  color: ${({ theme }) => theme.white};\r\n  border-bottom: 3px solid ${({ theme }) => theme.white};\r\n  padding: 7px 0;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:invalid {\r\n    border-bottom: 3px solid ${({ theme }) => theme.color2};\r\n    color: ${({ theme }) => theme.color2};\r\n  }\r\n  &::placeholder {\r\n    color: ${({ theme }) => theme.lightgray};\r\n  }\r\n\r\n  @media (min-width: 500px) {\r\n    width: 300px;\r\n    font-size: 2.8rem;\r\n    height: 55px;\r\n  }\r\n  @media (min-width: 700px) {\r\n    width: 300px;\r\n    font-size: 3.2rem;\r\n    height: 60px;\r\n  }\r\n`;\r\n\r\nexport default Input;\r\n","import styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  width: auto;\r\n  min-width: 220px;\r\n  height: 60px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-family: \"McLaren\", sans-serif;\r\n  line-height: 1;\r\n  font-size: 2.5rem;\r\n  color: ${({ theme }) => theme.white};\r\n  background-color: ${({ theme }) => theme.color2};\r\n  border-radius: 50px;\r\n  border: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  @media (min-width: 500px) {\r\n    min-width: 240px;\r\n    height: 65px;\r\n  }\r\n  @media (min-width: 700px) {\r\n    min-width: 260px;\r\n    height: 70px;\r\n    font-size: 3rem;\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GameContext } from \"../context\";\r\n\r\nconst LevelSelector = () => {\r\n  const { state, dispatch } = useContext(GameContext);\r\n\r\n  const handleClick = () => {\r\n    const level = state.level === \"easy\" ? \"hard\" : \"easy\";\r\n    dispatch({ type: \"SET_LEVEL\", payload: level });\r\n  };\r\n\r\n  return (\r\n    <LevelWrapper onClick={handleClick}>\r\n      <Indicator level={state.level} />\r\n      <Level>easy</Level>\r\n      <Level>hard</Level>\r\n    </LevelWrapper>\r\n  );\r\n};\r\n\r\nexport default LevelSelector;\r\n\r\n//Styled components\r\n\r\nconst LevelWrapper = styled.div`\r\n  position: relative;\r\n  height: 50px;\r\n  width: 200px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-radius: 40px;\r\n  background-color: ${({ theme }) => theme.color1};\r\n  border: 3px solid ${({ theme }) => theme.color3};\r\n  cursor: pointer;\r\n  @media (min-width: 500px) {\r\n    height: 55px;\r\n    width: 210px;\r\n  }\r\n  @media (min-width: 700px) {\r\n    height: 60px;\r\n    width: 220px;\r\n  }\r\n`;\r\n\r\nconst Level = styled.div`\r\n  width: 50%;\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.white};\r\n  font-family: \"McLaren\", sans-serif;\r\n  line-height: 1;\r\n  font-size: 2.5rem;\r\n  z-index: 2;\r\n  user-select: none;\r\n  @media (min-width: 500px) {\r\n    height: 55px;\r\n  }\r\n  @media (min-width: 700px) {\r\n    height: 60px;\r\n    font-size: 3rem;\r\n  }\r\n`;\r\n\r\nconst Indicator = styled.div`\r\n  position: absolute;\r\n  top: -3px;\r\n  left: -3px;\r\n  z-index: 1;\r\n  height: 50px;\r\n  width: 100px;\r\n  border-radius: 30px;\r\n  background-color: ${({ theme }) => theme.color3};\r\n  transition: transform 0.2s ease-out;\r\n  transform: ${({ level }) =>\r\n    level === \"easy\" ? \"translateX(0)\" : \"translateX(100px)\"};\r\n  @media (min-width: 500px) {\r\n    height: 55px;\r\n    width: 105px;\r\n    transform: ${({ level }) =>\r\n      level === \"easy\" ? \"translateX(0)\" : \"translateX(105px)\"};\r\n  }\r\n  @media (min-width: 700px) {\r\n    height: 60px;\r\n    width: 110px;\r\n    transform: ${({ level }) =>\r\n      level === \"easy\" ? \"translateX(0)\" : \"translateX(110px)\"};\r\n  }\r\n  }\r\n`;\r\n","import React, { useState, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GameContext } from \"../context\";\r\nimport welcomeImage from \"../assets/Welcome.png\";\r\nimport Input from \"../components/Input\";\r\nimport Button from \"../components/Button\";\r\nimport LevelSelector from \"../components/LevelSelector\";\r\n\r\nconst Welcome = () => {\r\n  const [user, setUser] = useState(\"\");\r\n  //   const [error, setError] = useState(\"\");\r\n  const { dispatch } = useContext(GameContext);\r\n\r\n  const handleInputChange = e => {\r\n    if (e.target.value.length < 16) {\r\n      setUser(e.target.value);\r\n    } else {\r\n      alert(\"please use a shorter name\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (/\\S/.test(user)) {\r\n      dispatch({ type: \"SET_USER\", payload: user });\r\n      dispatch({ type: \"SET_GAME_STATE\", payload: \"play\" });\r\n    } else {\r\n      alert(\"please fill your name\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <InnerWrapper>\r\n          <Heading>memory card game</Heading>\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Your name\"\r\n            maxlength=\"15\"\r\n            value={user}\r\n            onChange={handleInputChange}\r\n          />\r\n          <LevelSelector />\r\n          <Button onClick={handleSubmit}>play!</Button>\r\n        </InnerWrapper>\r\n        <Image src={welcomeImage} alt=\"welcome image\" />\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n\r\n//Styled components\r\nconst Wrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  min-height: 568px;\r\n  background: ${({ theme }) => theme.color1};\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 15px;\r\n  @media (min-width: 500px) {\r\n    padding: 25px;\r\n  }\r\n  @media (min-width: 700px) {\r\n    padding: 30px;\r\n  }\r\n  @media (min-width: 960px) {\r\n    padding: 40px;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    padding: 50px;\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  max-width: 1200px;\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n  justify-content: space-between;\r\n  max-height: 900px;\r\n  @media (min-width: 960px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nconst InnerWrapper = styled.div`\r\n  height: 60vh;\r\n  min-height: 350px;\r\n  max-height: 500px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding: 30px 0;\r\n  align-items: center;\r\n  @media (min-width: 960px) {\r\n    align-items: flex-start;\r\n    height: 100%;\r\n    max-height: 100%;\r\n  }\r\n`;\r\n\r\nconst Heading = styled.h1`\r\n  font-family: \"McLaren\", sans-serif;\r\n  line-height: 1;\r\n  font-size: 3rem;\r\n  color: ${({ theme }) => theme.white};\r\n  margin-bottom: 10px;\r\n  @media (min-width: 700px) {\r\n    font-size: 3.5rem;\r\n  }\r\n  @media (min-width: 960px) {\r\n    font-size: 5rem;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    font-size: 6rem;\r\n  }\r\n  @media (min-width: 1440px) {\r\n    font-size: 7rem;\r\n  }\r\n`;\r\n\r\nconst Image = styled.img`\r\n  object-fit: contain;\r\n  height: 150px;\r\n  @media (min-width: 500px) and (orientation: portrait) {\r\n    height: 300px;\r\n  }\r\n  @media (min-width: 700px) {\r\n    height: 400px;\r\n  }\r\n  @media (min-width: 960px) {\r\n    height: 600px;\r\n  }\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nconst Heading = styled.h2`\r\n  font-family: \"McLaren\", sans-serif;\r\n  margin: 0;\r\n  line-height: 1;\r\n  font-size: 2.5rem;\r\n  color: ${({ theme }) => theme.color1};\r\n  @media (min-width: 500px) {\r\n    font-size: 2.8rem;\r\n  }\r\n  @media (min-width: 700px) {\r\n    font-size: 3rem;\r\n  }\r\n  @media (min-width: 960px) {\r\n    font-size: 3.2rem;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    font-size: 3.5rem;\r\n  }\r\n  ${({ small }) =>\r\n    small &&\r\n    css`\r\n      font-size: 2rem;\r\n      padding: 15px 0;\r\n      @media (min-width: 500px) {\r\n        font-size: 2.2rem;\r\n      }\r\n      @media (min-width: 700px) {\r\n        font-size: 2.5rem;\r\n      }\r\n      @media (min-width: 1200px) {\r\n        padding: 20px 0;\r\n      }\r\n      @media (min-width: 1440px) {\r\n        padding: 30px 0;\r\n      }\r\n    `}\r\n  ${({ mobileHidden }) =>\r\n    mobileHidden &&\r\n    css`\r\n      display: none;\r\n      @media (min-width: 800px) {\r\n        display: block;\r\n      }\r\n    `}\r\n`;\r\n\r\nexport default Heading;\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Heading from \"../components/Heading\";\r\nimport Button from \"../components/Button\";\r\nimport FinishImage from \"../assets/Finish.png\";\r\nimport { GameContext } from \"../context\";\r\n\r\nconst Finish = () => {\r\n  const { state, dispatch } = useContext(GameContext);\r\n\r\n  const handleButtonClick = () => {\r\n    dispatch({ type: \"CLEAR_STATE\" });\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Image src={FinishImage} />\r\n      <Heading>Congratulations {state.user}!</Heading>\r\n      <Heading small>Your score: {state.score} moves</Heading>\r\n      <Button onClick={handleButtonClick}>play again!</Button>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Finish;\r\n\r\n//Styled components\r\nconst Wrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: ${({ theme }) => theme.white};\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 15px;\r\n  @media (min-width: 500px) {\r\n    padding: 15px 25px;\r\n  }\r\n  @media (min-width: 700px) {\r\n    padding: 20px 30px;\r\n  }\r\n  @media (min-width: 960px) {\r\n    padding: 25px 40px;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    padding: 30px 50px;\r\n  }\r\n`;\r\n\r\nconst Image = styled.img`\r\n  height: 100%;\r\n  max-height: 200px;\r\n  object-fit: contain;\r\n  @media (min-width: 500px) {\r\n    max-height: 250px;\r\n  }\r\n  @media (min-width: 700px) {\r\n    max-height: 350px;\r\n  }\r\n  @media (min-width: 960px) {\r\n    max-height: 400px;\r\n  }\r\n  @media (min-width: 1400px) {\r\n    max-height: 500px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst Card = ({ icon, id, flippedCards, hiddenCards, handleClick }) => {\r\n  const clickable = !flippedCards.includes(id) && !hiddenCards.includes(icon);\r\n  return (\r\n    <>\r\n      <CardWrapper onClick={clickable ? () => handleClick(icon, id) : null}>\r\n        <CardSide front flipped={flippedCards.includes(id)}>\r\n          <img src={icon} alt=\"icon\" />\r\n        </CardSide>\r\n        <CardSide\r\n          back\r\n          won={hiddenCards.includes(icon)}\r\n          flipped={flippedCards.includes(id)}\r\n        />\r\n      </CardWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n\r\n//Styled components\r\n\r\nconst CardWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0px;\r\n  position: relative;\r\n`;\r\n\r\nconst CardSide = styled.div`\r\n  position: absolute;\r\n  cursor: ${({ flipped }) => (flipped ? \"default\" : \"pointer\")};\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 20px;\r\n  transition: transform 0.6s cubic-bezier(0.21, 1.39, 0.49, 1.1),\r\n    background-color 0.6s ease;\r\n  transform-style: preserve-3d;\r\n  backface-visibility: hidden;\r\n  box-shadow: 0px 1px 8px rgba(37, 104, 239, 0.4);\r\n  ${({ front }) =>\r\n    front &&\r\n    css`\r\n      background-color: ${({ theme }) => theme.white};\r\n      border: 2px solid ${({ theme }) => theme.color1};\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      transform: ${({ flipped }) =>\r\n        flipped ? \"rotateY(0deg)\" : \"rotateY(180deg)\"};\r\n      img {\r\n        height: 80%;\r\n        object-fit: contain;\r\n      }\r\n    `}\r\n  ${({ back }) =>\r\n    back &&\r\n    css`\r\n      background-color: ${({ theme, won }) =>\r\n        won ? theme.white : theme.color1};\r\n      transform: ${({ flipped }) =>\r\n        flipped ? \"rotateY(180deg)\" : \"rotateY(0deg)\"};\r\n    `};\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nconst Board = styled.div`\r\n  display: grid;\r\n  /* grid-template-columns: ${({ level }) =>\r\n    level === \"hard\" ? \"repeat(6, 170px)\" : \"repeat(4, 170px)\"}; */\r\n  grid-template-columns: repeat(3, 90px);\r\n  grid-auto-rows: 90px;\r\n  grid-gap: 10px;\r\n  @media (min-width: 400px) {\r\n   grid-template-columns: repeat(3, 100px);\r\n  grid-auto-rows: 100px;\r\n  grid-gap: 15px;\r\n  }\r\n  @media (min-width: 500px) {\r\n    grid-template-columns: repeat(3, 120px);\r\n  grid-auto-rows: 120px;\r\n  grid-gap: 20px;\r\n  }\r\n  @media (min-width: 700px) {\r\n    grid-template-columns: repeat(4, 130px);\r\n  grid-auto-rows: 130px;\r\n  grid-gap: 20px;\r\n  }\r\n  @media (min-width: 960px) {\r\n    grid-template-columns: ${({ level }) =>\r\n      level === \"hard\" ? \"repeat(6, 140px)\" : \"repeat(4, 140px)\"};\r\n  grid-auto-rows: 140px;\r\n  grid-gap: 20px;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    grid-template-columns: ${({ level }) =>\r\n      level === \"hard\" ? \"repeat(6, 145px)\" : \"repeat(4, 145px)\"};\r\n  grid-auto-rows: 145px;\r\n  grid-gap: 25px;\r\n  }\r\n   @media (min-width: 1440px) {\r\n    grid-template-columns: ${({ level }) =>\r\n      level === \"hard\" ? \"repeat(6, 170px)\" : \"repeat(4, 170px)\"};\r\n  grid-auto-rows: 170px;\r\n  grid-gap: 40px;\r\n  }\r\n`;\r\n\r\nexport default Board;\r\n","import icon01 from \"./01.png\";\r\nimport icon02 from \"./02.png\";\r\nimport icon03 from \"./03.png\";\r\nimport icon04 from \"./04.png\";\r\nimport icon05 from \"./05.png\";\r\nimport icon06 from \"./06.png\";\r\nimport icon07 from \"./07.png\";\r\nimport icon08 from \"./08.png\";\r\nimport icon09 from \"./09.png\";\r\n// import icon10 from \"./icons/10.png\";\r\n// import icon11 from \"./icons/11.png\";\r\n// import icon12 from \"./icons/12.png\";\r\n\r\nimport shuffle from \"lodash.shuffle\";\r\n\r\nconst icons1 = [\r\n  icon01,\r\n  icon02,\r\n  icon03,\r\n  icon04,\r\n  icon05,\r\n  icon06,\r\n  icon07,\r\n  icon08,\r\n  icon09\r\n];\r\n\r\nconst icons2 = [icon01, icon02, icon03, icon04, icon05, icon06];\r\nconst hard = icons1.reduce(function(res, current) {\r\n  return res.concat([current, current]);\r\n}, []);\r\n\r\nconst easy = icons2.reduce(function(res, current) {\r\n  return res.concat([current, current]);\r\n}, []);\r\n\r\nconst easyIcons = shuffle(easy);\r\nconst hardIcons = shuffle(hard);\r\n\r\nexport { hardIcons, easyIcons };\r\n","import React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport Card from \"../components/Card\";\nimport Board from \"../components/Board\";\nimport Heading from \"../components/Heading\";\nimport { GameContext } from \"../context\";\nimport { hardIcons, easyIcons } from \"../icons/icons\";\n\nfunction Game() {\n  const [flippedCards, setFlippedCards] = useState([]);\n  const [flippedIcons, setFlippedIcons] = useState([]);\n  const [won, setWon] = useState([]);\n  const [moves, setMoves] = useState(0);\n\n  const { state, dispatch } = useContext(GameContext);\n\n  const shuffledIcons = state.level === \"hard\" ? hardIcons : easyIcons;\n\n  const handleClick = (icon, id) => {\n    if (flippedCards.length < 2) {\n      const newFlippedCards = [...flippedCards, id];\n      setFlippedCards(newFlippedCards);\n      const newFlippedIcons = [...flippedIcons, icon];\n      setFlippedIcons(newFlippedIcons);\n      if (newFlippedIcons.length === 2) {\n        checkCards(newFlippedIcons);\n      }\n    }\n  };\n\n  const checkCards = icons => {\n    setMoves(moves + 1);\n    let newWon = [];\n    setTimeout(() => {\n      if (icons[0] === icons[1]) {\n        newWon = [...won, ...icons];\n        setWon(newWon);\n      }\n      setFlippedCards([]);\n      setFlippedIcons([]);\n      if (newWon.length === shuffledIcons.length) {\n        dispatch({ type: \"SET_SCORE\", payload: moves + 1 });\n        dispatch({ type: \"SET_GAME_STATE\", payload: \"finished\" });\n      }\n    }, 1000);\n  };\n\n  return (\n    <Wrapper>\n      <Container>\n        <TopBar>\n          <Heading small>Level: {state.level}</Heading>\n          <Heading mobileHidden>memory card game</Heading>\n          <Heading small>User: {state.user}</Heading>\n        </TopBar>\n        <Heading small>Moves: {moves}</Heading>\n        <Board level={state.level}>\n          {shuffledIcons.map((icon, index) => (\n            <Card\n              key={index}\n              id={index}\n              icon={icon}\n              flippedCards={flippedCards}\n              hiddenCards={won}\n              handleClick={handleClick}\n            />\n          ))}\n        </Board>\n      </Container>\n    </Wrapper>\n  );\n}\n\nexport default Game;\n\n//Styled components\n\nconst Wrapper = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  background: ${({ theme }) => theme.white};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 15px;\n  @media (min-width: 500px) {\n    padding: 15px 25px;\n  }\n  @media (min-width: 700px) {\n    padding: 20px 30px;\n  }\n  @media (min-width: 1200px) {\n    padding: 20px 50px;\n  }\n  @media (min-width: 1440px) {\n    padding: 30px 50px;\n  }\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  max-width: 1200px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst TopBar = styled.header`\n  width: 100%;\n  height: 80px;\n  background-color: ${({ theme }) => theme.white};\n  border-radius: 20px;\n  box-shadow: 0px 1px 8px rgba(37, 104, 239, 0.4);\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px 20px;\n  @media (min-width: 500px) {\n    height: 90px;\n    padding: 20px 30px;\n  }\n  @media (min-width: 700px) {\n    height: 100px;\n    padding: 25px 40px;\n  }\n  @media (min-width: 1440px) {\n    height: 140px;\n    padding: 30px 80px;\n  }\n`;\n","import React, { useContext } from \"react\";\r\n// import { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport { GameContext } from \"../context\";\r\nimport Welcome from \"./Welcome\";\r\nimport Finish from \"./Finish\";\r\nimport Game from \"./Game\";\r\n\r\nconst Root = () => {\r\n  const { state } = useContext(GameContext);\r\n  console.log(state);\r\n  switch (state.gameState) {\r\n    case \"play\":\r\n      return <Game />;\r\n    case \"finished\":\r\n      return <Finish />;\r\n    default:\r\n      return <Welcome />;\r\n  }\r\n};\r\n\r\nexport default Root;\r\n","import React from \"react\";\r\nimport { GameProvider } from \"./context\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport GlobalStyle from \"./theme/GlobalStyle\";\r\nimport { theme } from \"./theme/theme\";\r\nimport Root from \"./views/Root\";\r\n\r\nconst App = () => (\r\n  <GameProvider>\r\n    <GlobalStyle />\r\n    <ThemeProvider theme={theme}>\r\n      <Root />\r\n    </ThemeProvider>\r\n  </GameProvider>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}